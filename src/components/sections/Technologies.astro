---
import { Icon } from "astro-icon/components";
import { AutoScroller } from "@/components/ui/AutoScroller";
import { Card } from "@/components/ui/card";
import { getTechnologies } from "@/data/technologies";
import type { Locale } from "@/lib/i18n";

const locale: Locale = Astro.url.pathname.startsWith('/en') ? 'en' : 'fr';
const technologies = await getTechnologies(locale);

// Diviser les technologies en 3 lignes de manière aléatoire
const shuffleArray = <T,>(array: T[]): T[] => {
  const shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
};

const shuffledTechnologies = shuffleArray(technologies.technologies);
const technologiesPerRow = Math.ceil(shuffledTechnologies.length / 3);

const technologyRows = [
  shuffledTechnologies.slice(0, technologiesPerRow),
  shuffledTechnologies.slice(technologiesPerRow, technologiesPerRow * 2),
  shuffledTechnologies.slice(technologiesPerRow * 2),
];
---

<section class="mt-4 w-full">
  <p
    class="md:px-6 px-4 md:max-w-screen-lg mx-auto text-left font-bold text-sm"
  >
    {technologies.title}
  </p>
  <div class="flex flex-col gap-6 mt-4">
    {
      technologyRows.map(
        (
          rowTechnologies: typeof technologies.technologies,
          rowIndex: number
        ) => (
          <div class="relative group w-full overflow-hidden">
            <div
              id={`tech-row-${rowIndex}`}
              class="flex gap-2 pb-2 transition-all duration-300 overflow-x-auto scroll-smooth whitespace-nowrap hide-scrollbar"
              style="scrollbar-width: none;"
            >
              {rowTechnologies
                .concat(rowTechnologies)
                .map((technology: (typeof technologies.technologies)[0]) => (
                  <Card className="flex flex-row gap-2 p-2 relative overflow-hidden items-center w-fit font-black text-sm min-w-fit flex-shrink-0 transition-transform duration-200">
                    {(technology.iconColor || technology.iconBlack) && (
                      <Icon
                        name={technology.iconColor || technology.iconBlack}
                        class="size-5"
                      />
                    )}
                    <p class="w-fit font-bold">{technology.name}</p>
                  </Card>
                ))}
            </div>
            <AutoScroller
              containerId={`tech-row-${rowIndex}`}
              speed={rowIndex === 1 ? -0.5 : 0.5}
              client:load
            />
          </div>
        )
      )
    }
  </div>
</section>

<style>
  .hide-scrollbar {
    scrollbar-width: none;
  }
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }
</style>
